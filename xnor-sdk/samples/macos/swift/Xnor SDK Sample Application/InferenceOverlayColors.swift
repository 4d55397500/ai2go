// Copyright (c) 2019 Xnor.ai, Inc.
//

import Foundation

class SampleColors {

  static let colors : [CGColor] = [
    CGColor(red: 0.432, green: 0.894, blue: 0.567, alpha: 1.0),
    CGColor(red: 0.888, green: 0.569, blue: 0.441, alpha: 1.0),
    CGColor(red: 0.879, green: 0.577, blue: 0.438, alpha: 1.0),
    CGColor(red: 0.503, green: 0.812, blue: 0.629, alpha: 1.0),
    CGColor(red: 0.902, green: 0.433, blue: 0.772, alpha: 1.0),
    CGColor(red: 0.859, green: 0.470, blue: 0.764, alpha: 1.0),
    CGColor(red: 0.437, green: 0.760, blue: 0.889, alpha: 1.0),
    CGColor(red: 0.840, green: 0.483, blue: 0.771, alpha: 1.0),
    CGColor(red: 0.437, green: 0.761, blue: 0.885, alpha: 1.0),
    CGColor(red: 0.848, green: 0.594, blue: 0.463, alpha: 1.0),
    CGColor(red: 0.718, green: 0.625, blue: 0.656, alpha: 1.0),
    CGColor(red: 0.462, green: 0.860, blue: 0.590, alpha: 1.0),
    CGColor(red: 0.450, green: 0.777, blue: 0.820, alpha: 1.0),
    CGColor(red: 0.846, green: 0.593, blue: 0.467, alpha: 1.0),
    CGColor(red: 0.767, green: 0.572, blue: 0.692, alpha: 1.0),
    CGColor(red: 0.439, green: 0.889, blue: 0.566, alpha: 1.0),
    CGColor(red: 0.461, green: 0.748, blue: 0.869, alpha: 1.0),
    CGColor(red: 0.840, green: 0.491, blue: 0.747, alpha: 1.0),
    CGColor(red: 0.435, green: 0.888, blue: 0.578, alpha: 1.0),
    CGColor(red: 0.453, green: 0.749, blue: 0.882, alpha: 1.0),
    CGColor(red: 0.456, green: 0.748, blue: 0.880, alpha: 1.0),
    CGColor(red: 0.465, green: 0.739, blue: 0.885, alpha: 1.0),
    CGColor(red: 0.453, green: 0.873, blue: 0.576, alpha: 1.0),
    CGColor(red: 0.539, green: 0.752, blue: 0.698, alpha: 1.0),
    CGColor(red: 0.778, green: 0.644, blue: 0.479, alpha: 1.0),
    CGColor(red: 0.572, green: 0.774, blue: 0.581, alpha: 1.0),
    CGColor(red: 0.453, green: 0.876, blue: 0.569, alpha: 1.0),
    CGColor(red: 0.892, green: 0.563, blue: 0.448, alpha: 1.0),
    CGColor(red: 0.489, green: 0.841, blue: 0.581, alpha: 1.0),
    CGColor(red: 0.906, green: 0.538, blue: 0.484, alpha: 1.0),
    CGColor(red: 0.460, green: 0.870, blue: 0.570, alpha: 1.0),
    CGColor(red: 0.877, green: 0.578, blue: 0.439, alpha: 1.0),
    CGColor(red: 0.436, green: 0.759, blue: 0.895, alpha: 1.0),
    CGColor(red: 0.476, green: 0.842, blue: 0.607, alpha: 1.0),
    CGColor(red: 0.466, green: 0.742, blue: 0.877, alpha: 1.0),
    CGColor(red: 0.880, green: 0.449, blue: 0.774, alpha: 1.0),
    CGColor(red: 0.888, green: 0.451, blue: 0.753, alpha: 1.0),
    CGColor(red: 0.850, green: 0.585, blue: 0.479, alpha: 1.0),
    CGColor(red: 0.848, green: 0.597, blue: 0.452, alpha: 1.0),
    CGColor(red: 0.464, green: 0.860, blue: 0.588, alpha: 1.0),
    CGColor(red: 0.531, green: 0.714, blue: 0.813, alpha: 1.0),
    CGColor(red: 0.468, green: 0.746, blue: 0.860, alpha: 1.0),
    CGColor(red: 0.499, green: 0.831, blue: 0.587, alpha: 1.0),
    CGColor(red: 0.443, green: 0.879, blue: 0.582, alpha: 1.0),
    CGColor(red: 0.436, green: 0.760, blue: 0.890, alpha: 1.0),
    CGColor(red: 0.727, green: 0.671, blue: 0.518, alpha: 1.0),
    CGColor(red: 0.861, green: 0.471, blue: 0.758, alpha: 1.0),
    CGColor(red: 0.880, green: 0.454, blue: 0.761, alpha: 1.0),
    CGColor(red: 0.433, green: 0.893, blue: 0.569, alpha: 1.0),
    CGColor(red: 0.874, green: 0.459, blue: 0.761, alpha: 1.0),
    CGColor(red: 0.901, green: 0.436, blue: 0.765, alpha: 1.0),
    CGColor(red: 0.804, green: 0.518, blue: 0.755, alpha: 1.0),
    CGColor(red: 0.779, green: 0.619, blue: 0.540, alpha: 1.0),
    CGColor(red: 0.868, green: 0.576, blue: 0.465, alpha: 1.0),
    CGColor(red: 0.740, green: 0.623, blue: 0.614, alpha: 1.0),
    CGColor(red: 0.465, green: 0.743, blue: 0.874, alpha: 1.0),
    CGColor(red: 0.875, green: 0.453, blue: 0.775, alpha: 1.0),
    CGColor(red: 0.453, green: 0.873, blue: 0.577, alpha: 1.0),
    CGColor(red: 0.867, green: 0.573, blue: 0.475, alpha: 1.0),
    CGColor(red: 0.441, green: 0.889, blue: 0.561, alpha: 1.0),
    CGColor(red: 0.870, green: 0.458, blue: 0.772, alpha: 1.0),
    CGColor(red: 0.431, green: 0.763, blue: 0.893, alpha: 1.0),
    CGColor(red: 0.447, green: 0.754, blue: 0.881, alpha: 1.0),
    CGColor(red: 0.893, green: 0.436, blue: 0.780, alpha: 1.0),
    CGColor(red: 0.913, green: 0.426, blue: 0.766, alpha: 1.0),
    CGColor(red: 0.502, green: 0.742, blue: 0.803, alpha: 1.0),
    CGColor(red: 0.484, green: 0.760, blue: 0.792, alpha: 1.0),
    CGColor(red: 0.486, green: 0.847, blue: 0.576, alpha: 1.0),
    CGColor(red: 0.444, green: 0.757, blue: 0.879, alpha: 1.0),
    CGColor(red: 0.452, green: 0.752, blue: 0.878, alpha: 1.0),
    CGColor(red: 0.453, green: 0.880, blue: 0.560, alpha: 1.0),
    CGColor(red: 0.560, green: 0.761, blue: 0.636, alpha: 1.0),
    CGColor(red: 0.451, green: 0.757, blue: 0.867, alpha: 1.0),
    CGColor(red: 0.441, green: 0.760, blue: 0.879, alpha: 1.0),
    CGColor(red: 0.801, green: 0.530, blue: 0.732, alpha: 1.0),
    CGColor(red: 0.453, green: 0.747, blue: 0.890, alpha: 1.0),
    CGColor(red: 0.875, green: 0.457, blue: 0.764, alpha: 1.0),
    CGColor(red: 0.866, green: 0.575, blue: 0.472, alpha: 1.0),
    CGColor(red: 0.880, green: 0.571, blue: 0.451, alpha: 1.0),
    CGColor(red: 0.450, green: 0.750, blue: 0.887, alpha: 1.0),
    CGColor(red: 0.426, green: 0.768, blue: 0.891, alpha: 1.0),
    CGColor(red: 0.456, green: 0.748, blue: 0.879, alpha: 1.0),
    CGColor(red: 0.875, green: 0.455, blue: 0.769, alpha: 1.0),
    CGColor(red: 0.450, green: 0.873, blue: 0.581, alpha: 1.0),
    CGColor(red: 0.876, green: 0.454, blue: 0.770, alpha: 1.0),
    CGColor(red: 0.428, green: 0.895, blue: 0.572, alpha: 1.0),
    CGColor(red: 0.448, green: 0.753, blue: 0.884, alpha: 1.0),
    CGColor(red: 0.461, green: 0.863, blue: 0.586, alpha: 1.0),
    CGColor(red: 0.843, green: 0.483, blue: 0.764, alpha: 1.0),
    CGColor(red: 0.871, green: 0.581, blue: 0.444, alpha: 1.0),
    CGColor(red: 0.880, green: 0.563, blue: 0.472, alpha: 1.0),
    CGColor(red: 0.895, green: 0.439, blue: 0.768, alpha: 1.0),
    CGColor(red: 0.462, green: 0.872, blue: 0.560, alpha: 1.0),
    CGColor(red: 0.516, green: 0.816, blue: 0.591, alpha: 1.0),
    CGColor(red: 0.433, green: 0.764, blue: 0.886, alpha: 1.0),
    CGColor(red: 0.461, green: 0.864, blue: 0.582, alpha: 1.0),
    CGColor(red: 0.574, green: 0.736, blue: 0.669, alpha: 1.0),
    CGColor(red: 0.861, green: 0.473, blue: 0.752, alpha: 1.0),
    CGColor(red: 0.439, green: 0.881, blue: 0.583, alpha: 1.0),
    CGColor(red: 0.565, green: 0.693, blue: 0.794, alpha: 1.0),
  ];

  static func sampleColor(index: Int) -> CGColor {
    return self.colors[index % colors.count]
  }
}
