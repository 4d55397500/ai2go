// Copyright (c) 2019 Xnor.ai, Inc.
//

#ifndef __VISUAL_COLOR_PALETTE_H__
#define __VISUAL_COLOR_PALETTE_H__

#include <cstdint>

namespace xnor_sample {

struct YuvColor {
  std::uint8_t y;
  std::uint8_t u;
  std::uint8_t v;
};

// Returns a color in yuv space. The colors are generated by mixing a set of
// primary colors in pseudorandom proportions.
// The functions accepts a class id and return a color based on the
// class id. Ambarella uses a VUY colorspace. Thus, a reordered of the result is
// required. eg.
// YuvColor yuv = GetYuvColorByClassId(class_id);
// color_map[kAmbarellaColorClassLabelColorBegin + class_id] =
//       AmbarellaColorMapEntry{yuv.v, yuv.u, yuv.y, 255};
YuvColor GetYuvColorByClassId(std::int32_t class_id);

}  // namespace xnor_sample

#endif  // __VISUAL_COLOR_PALETTE_H__
